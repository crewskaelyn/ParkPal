// Generated by JSIL v0.8.2 build 13182. See http://jsil.org/ for more information. 

'use strict';
var $asm00 = JSIL.GetAssembly("9h05neij, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null");
var $asm01 = JSIL.GetAssembly("mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089");

/* Generated by JSIL v0.8.2 build 13182. See http://jsil.org/ for more information. */ 
'use strict';
var $asm00 = JSIL.DeclareAssembly("9h05neij, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.SetEntryPoint($asm00, $asm00.TypeRef("tigerhacks.Program"), "Main", JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("System.String")])));

JSIL.DeclareNamespace("tigerhacks");
/* class tigerhacks.Program */ 

(function Program$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Console)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize(System.Array.Of($asm01.System.String))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Collections.Generic.List$b1.Of($asm01.System.String))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Converter$b2.Of($asm01.System.String, $asm01.System.String))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Generic.List`1", [$asm01.TypeRef("System.String")]), [$asm01.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm01.TypeRef("System.String")])]))) ();
  };

  function Program__ctor () {
  };

  function Program_$lgetLocation$gm__0 (d) {
    return d.toLowerCase();
  };

  function Program_getLocation () {

  $loop0: 
    while (true) {
      $T01().WriteLine("Where are you parking today? Type the name of one of the parking lots below!");
      $T01().WriteLine("");
      var parkinglots = JSIL.Array.New($T00(), ["Virginia Ave", "Conley", "10th & Cherry", "Hitt Street", "Turner Ave", "5th & Walnut", "Short Street Garage", "8th & Cherry", "6th & Cherry", "8th & Walnut", "UM Hospital", "William Street Garage", "UM Lot A", "UM Lot AV8", "UM Lot AV11", "UM Lot G", "Lot J"]);
      var lotsRange = $S00().Construct(parkinglots);
      $T01().WriteLine(JSIL.JoinStrings("\n", parkinglots));
      var location = $T01().ReadLine();
      lotsRange = $T03().prototype.ConvertAll$b1($T00()).call(lotsRange, $T04().New($thisType, $thisType.$lgetLocation$gm__0, function () { return JSIL.GetMethodInfo($thisType, "$lgetLocation$gm__0", new JSIL.MethodSignature($asm01.System.String, [$asm01.System.String]), true); }));
      var fileName = (location.toLowerCase());
      if (lotsRange.Contains(fileName)) {
        break $loop0;
      }
      $T01().WriteLine("Error: Please enter a parking lot on the List!");
    }
    $T01().WriteLine("You have selected {0} as your parking spot!", fileName);
    return $thisType.setName(fileName);
  };

  function Program_Main (args) {
    var location = $thisType.getLocation();
  };

  function Program_setName (locationName) {
    return JSIL.ConcatString(locationName, ".txt");
  };

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("System.Object"), 
      Name: "tigerhacks.Program", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Program__ctor
    );

    $.Method({Static:true , Public:false}, "$lgetLocation$gm__0", 
      new JSIL.MethodSignature($.String, [$.String]), 
      Program_$lgetLocation$gm__0
    )
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "getLocation", 
      JSIL.MethodSignature.Return($.String), 
      Program_getLocation
    );

    $.Method({Static:true , Public:false}, "Main", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.String])), 
      Program_Main
    );

    $.Method({Static:true , Public:false}, "setName", 
      new JSIL.MethodSignature($.String, [$.String]), 
      Program_setName
    );

    $.Field({Static:true , Public:false}, "$l$gf__am$cache0", $asm01.TypeRef("System.Converter`2", [$.String, $.String]))
      .Attribute($asm01.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();


